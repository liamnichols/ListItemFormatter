name: CI

on:
  pull_request:
    branches: [ '*' ]

jobs:
  checks:
    name: Checks (Xcode ${{ matrix.xcode_version }})
    runs-on: macos-latest

    strategy:
      matrix:
        xcode_version: ['10.3', '11.6', '12_beta']
        include:
        - xcode_version: '10.3'
          destination_ios: 'OS=12.4,name=iPhone SE'
          destination_macos: 'platform=OS X'
          destination_tvos: 'OS=12.4,name=Apple TV'
        - xcode_version: '11.6'
          destination_ios: 'OS=13.6,name=iPhone 11 Pro'
          destination_macos: 'platform=macOS'
          destination_tvos: 'OS=13.4,name=Apple TV'
        - xcode_version: '12_beta'
          destination_ios: 'OS=14.0,name=iPhone 11 Pro'
          destination_macos: 'platform=macOS'
          destination_tvos: 'OS=14.0,name=Apple TV'

    env:
      DEVELOPER_DIR: '/Applications/Xcode_${{ matrix.xcode_version }}.app/Contents/Developer'

    steps:
    # Checkout the Git repo
    - name: Checkout Repo
      uses: actions/checkout@v2

    # Setup Ruby and Bundler
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true

    # Run Unit Tests (iOS)
    - name: Run Tests - iOS
      run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild -scheme "ListItemFormatter iOS" -destination "${{ matrix.destination_ios }}" clean test | bundle exec xcpretty

    # Run Unit Tests (macOS)
    - name: Run Tests - macOS
      run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild -scheme "ListItemFormatter macOS" -destination "${{ matrix.destination_macos }}" clean test | bundle exec xcpretty

    # Run Unit Tests (tvOS)
    - name: Run Tests - tvOS
      run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild -scheme "ListItemFormatter tvOS" -destination "${{ matrix.destination_tvos }}" clean test | bundle exec xcpretty

    # Verify Carthage
    - name: Carthage Build
      run: carthage build --platform all --no-skip-current

    # Verify CocoaPods
    - name: Pod Spec Lint
      run: bundle exec pod spec lint
